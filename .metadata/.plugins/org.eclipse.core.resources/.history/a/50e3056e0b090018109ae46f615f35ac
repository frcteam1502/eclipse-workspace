package org.usfirst.frc.team1502.robot;

import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.GenericHID.RumbleType;
import edu.wpi.first.wpilibj.ADXRS450_Gyro;
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.DigitalInput;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.TalonSRX;
import com.ctre.phoenix.motorcontrol.can.VictorSPX;

import org.usfirst.frc.team1502.robot.AutoBot.Unit;

public class TestRun {
    public TalonSRX rightWheel;
    public TalonSRX leftWheel;
    public VictorSPX omniWheels;
    public Spark leftIntake; 
    public Spark rightIntake;
    public Joystick leftStick;
    public Joystick rightStick;
    public Joystick manipStick;
    public DigitalInput limitSwitch;
    public boolean gyroOnLastCycle = false;
    public int tickCount = 0; // 50 ticks per second
    public ADXRS450_Gyro spiGyro;
    
    public PIDController gyroPID;
    public boolean isKeplerStopped = false;
    
    static final double DEADZONE = 0.02;
    public static final double OVERALL_PID_GAIN = 0.04;
    public static final double WHEEL_TICKS_PER_DEGREE = 2588 / 360;
    
    static double EXP_RATE = 3;
    
    boolean gyroWasOnLastCycle = false;
    boolean gyroIsOn = false;
    
    public Rumbler r;
    
    public TestRun(Joystick left, Joystick right, Joystick manip, int w1, int w2, int w3, ADXRS450_Gyro spiGyro) {
        this.leftStick = left;
        this.rightStick = right;
        this.manipStick = manip;
        
        this.rightWheel = new TalonSRX(w3);
        this.leftWheel = new TalonSRX(w1);
        this.omniWheels = new VictorSPX(w2);
        
        this.leftIntake = new Spark(0);
        this.rightIntake = new Spark(1);
        
        this.gyroPID = new PIDController(1.325, 9.49e-4, 320);
        this.limitSwitch = new DigitalInput(1);
        this.spiGyro = spiGyro;
    }
    
    // Makes sure there's no unintended joystick drift
    public void autonomousPeriodic() {
    	
    }
    
    public void autonomousInit() {
    	String gameData;
//    	gameData = DriverStation.getInstance().getGameSpecificMessage();
//    	
//    	if (gameData.valueOf(0) == "L") {
//    		//Left
//    	} else {
//    		//Right
//    	}
    	
    	//AutoBot bot = new AutoBot(this);
    	//bot.go(-360 * 2, Unit.kDegrees);
    	
//    	Timer t = new Timer(() -> {
//    		leftWheel.set(ControlMode.PercentOutput, -0.3);
//    	}, 1000, Timer.TimerType.kTimeout);
//    	leftWheel.set(ControlMode.PercentOutput, 0.1);
    }
    
    public void teleopInit() {
    	leftWheel.configOpenloopRamp(.14, 10);
    	rightWheel.configOpenloopRamp(.14, 10);
    	this.r = new Rumbler(manipStick);
    	r.setLeft(0.5);
    }
    
    public void teleopPeriodic() {
        double speed = MecanumDrive.expRate(deadZone(rightStick.getY()), EXP_RATE);
        double turn = MecanumDrive.expRate(deadZone(leftStick.getX()), EXP_RATE);
        
        if (leftStick.getRawButton(11)) {
        	isKeplerStopped = true;
        }
        if (isKeplerStopped) {
        	leftWheel.set(ControlMode.PercentOutput, 0);
        	rightWheel.set(ControlMode.PercentOutput, 0);
        	omniWheels.set(ControlMode.PercentOutput, 0);
        	leftIntake.set(0);
        	rightIntake.set(0);
        	return;
        }
        
        gyroWasOnLastCycle = gyroIsOn;
        gyroIsOn = rightStick.getRawButton(1);
        
        if (gyroIsOn && !gyroWasOnLastCycle) {
        	gyroPID.reset();
        	spiGyro.reset();
        }
        
        manipStick.setRumble(RumbleType.kLeftRumble, manipStick.getRawAxis(2));
        manipStick.setRumble(RumbleType.kRightRumble, manipStick.getRawAxis(3));
        
        if (gyroIsOn) {
        	if (speed <= 0) { //Forwards or Stationary
	        	gyroPID.P = 0.575;
	        	gyroPID.I = 2.83e-4;
	        	gyroPID.D = 167.5;
	        } else { //Backwards
	        	gyroPID.P = 1.325;
	        	gyroPID.I = 9.49e-4;
	        	gyroPID.D = 320;
	        }
        	
        	gyroPID.input(spiGyro.getAngle());
            turn = -gyroPID.getCorrection() * OVERALL_PID_GAIN;
            
            System.out.println("stability: " + (Math.abs(turn) < 0.05));
            System.out.println("isStable:" + gyroPID.isStable(2));
        }
        
        leftWheel.set(ControlMode.PercentOutput, speed);
        rightWheel.set(ControlMode.PercentOutput, -speed);
        omniWheels.set(ControlMode.PercentOutput, -turn);
        
        if (manipStick.getRawButton(4)) { // out
        	leftIntake.set(1);
        	rightIntake.set(1);
        } else if (manipStick.getRawButton(1)) { // in
        	leftIntake.set(-1);
        	rightIntake.set(-1);
        } else if (manipStick.getRawButton(3)) {
        	leftIntake.set(-1);
        	rightIntake.set(1);
        } else if (manipStick.getRawButton(2)) {
        	leftIntake.set(1);
        	rightIntake.set(-1);
    	} else {
        	leftIntake.set(0);
        	rightIntake.set(0);
        }
    }
    
    public double deadZone(double i) {
        if (Math.abs(i) < DEADZONE) {
            i = 0.0;
        }
        return i;
    }
}
